version: "3"
services:
  zookeeper:
    image: "bitnami/zookeeper:latest"
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_MY_ID=1
  kafka:
    image: "wurstmeister/kafka"
    container_name: "kafka"
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      # - KAFKA_HOST = 172.16.1.218:9092
      - KAFKA_ADVERTISED_HOST_NAME= kafka
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://172.16.1.218:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - ./data/kafka:/var/run/docker.sock
    depends_on:
      - zookeeper
  mongo:
    container_name: mongo
    image: mongo
    ports:
      - 27017:27017
    volumes:
      - ./data/mongo:/data/db
  postgres:
    container_name: postgres
    image: postgres
    ports:
      - 5432:5432
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB= postgres

  app1:
    container_name: app1
    build: ./app1
    ports:
      - 8080:8080
    volumes:
      - ./app1:/app1
    environment:
      - PORT=8080
      - POSTGRES_URL = postgres://postgres:postgres@postgres:5432/postgres
      - KAFKA_BOOTSTRAP_SERVERS = kafka:9092
      - KAFKA_TOPIC=topic1
    depends_on:
      - postgres
      - kafka
  app2:
    container_name: app2
    build: ./app2
    ports:
      - 8081:8081
    volumes:
      - ./app2:/app2
    environment:
      - PORT=8081
      - MONGO_URL = 'mongodb://mongo:27017/app2'
      - KAFKA_BOOTSTRAP_SERVERS = kafka:9092
      - KAFKA_TOPIC=topic1
    depends_on:
      - mongo
      - kafka
